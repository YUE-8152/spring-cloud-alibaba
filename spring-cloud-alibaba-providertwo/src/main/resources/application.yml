#server:
#  port: 8081
#
#logging:
#  level:
#    com.yue.spring.cloud.alibaba.provider: debug
#  file:
#    #name: /spring-boot-dubbo/logs/app-service.log
#    name: logs/provider-8081.log
#
#spring:
#  datasource:
#    druid:
#      driver-class-name: com.mysql.cj.jdbc.Driver                      # mysql驱动包
#      url: jdbc:mysql://localhost:3306/mytest?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8   # 数据库名称
#      username: root
#      password: 123456
#      # 初始化时建立物理连接的个数
#      initial-size: 50
#      # 最大连接池数量
#      max-active: 200
#      # 最小连接池数量
#      min-idle: 50
#      # 获取连接时最大等待时间
#      max-wait: 60000
#      # 是否缓存preparedStatement，也就是PSCache。
#      pool-prepared-statements: false
#      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
#      max-pool-prepared-statement-per-connection-size: -1
#      # 用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。
#      validation-query: SELECT 'x'
#      # 单位：秒，检测连接是否有效的超时时间。
#      validation-query-timeout: 1
#      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
#      test-on-borrow: false
#      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
#      test-on-return: false
#      # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
#      test-while-idle: true
#      # 有两个含义：1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
#      time-between-eviction-runs-millis: 6000
#      # 连接保持空闲而不被驱逐的最小时间
#      min-evictable-idle-time-millis: 1800000
#      # 监控页面相关配置,可通过 http://localhost:8081/druid/index.html 访问
#      stat-view-servlet:
#        enabled: true  # 开启访问监控控制台
#        url-pattern: /druid/*
#        login-username: admin
#        login-password: Password@123
#        #allow: 127.0.0.1  # 白名单
#        #deny: 127.0.0.1  # 黑名单
#        reset-enable: false
#      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#      filters: stat,wall,slf4j
#      web-stat-filter:
#        #默认为false，设置为true启动
#        enabled: true
#        url-pattern: "/*"
#        exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"
#      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#      # 合并多个DruidDataSource的监控数据
#      #useGlobalDataSourceStat: true
#      #schema: classpath:sql/schema-mysql.sql        #自动执行建表sql脚本，如果有多个sql文件，可以用逗号分隔
#      #data: classpath:sql/data-mysql.sql            #自动执行初始化sql脚本
#      #initialization-mode: always                   #Spring Boot2.x 必须添加 initialization-mode配置才会执行，默认为EMBEDDED也就是嵌入式数据库（H2这种），如果要在mysql下执行需要设置成为always
#
#  application:
#    name: provider-8081
#  cloud:
#    nacos:
#      discovery:
#        group: DEV_GROUP
#        server-addr: 127.0.0.1:8848
#        namespace: DEV
#
#management:
#  endpoints:
#    web:
#      exposure:
#        include: "*"
#
## mybatis-plus相关配置
#mybatis-plus:
#  mapper-locations: classpath:mapper/*/*.xml
